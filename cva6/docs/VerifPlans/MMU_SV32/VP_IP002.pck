(Vsatp
p0
ccopy_reg
_reconstructor
p1
(cvp_pack
Ip
p2
c__builtin__
object
p3
Ntp4
Rp5
(dp6
Vprop_count
p7
I4
sVname
p8
g0
sVprop_list
p9
(dp10
sVip_num
p11
I2
sVwid_order
p12
I2
sVrfu_dict
p13
(dp14
sVrfu_list
p15
(lp16
(V000_access permission
p17
g1
(cvp_pack
Prop
p18
g3
Ntp19
Rp20
(dp21
Vitem_count
p22
I1
sg8
g17
sVtag
p23
VVP_MMU_SV32_F002_S000
p24
sVitem_list
p25
(dp26
sg12
I0
sg15
(lp27
(V000
p28
g1
(cvp_pack
Item
p29
g3
Ntp30
Rp31
(dp32
g8
V000
p33
sg23
VVP_MMU_SV32_F002_S000_I000
p34
sVdescription
p35
VAccess satp in M, S, and U mode using csrrw, csrrc, csrrs
p36
sVpurpose
p37
VISA Volume II: Privilege Architecture Version 20211203, Chapter 5.1.11
p38
sVverif_goals
p39
VShow that satp is only accessible in M and S mode and illegal instruction exception is generated when accessed in lower privilege mode
p40
sVcoverage_loc
p41
V
p42
sVpfc
p43
I3
sVtest_type
p44
I0
sVcov_method
p45
I0
sVcores
p46
I8
sVcomments
p47
g42
sVstatus
p48
g42
sVsimu_target_list
p49
(lp50
sg15
(lp51
sVrfu_list_2
p52
(lp53
sg13
(dp54
Vlock_status
p55
I0
ssbtp56
asVrfu_list_1
p57
(lp58
sg52
(lp59
sg13
(dp60
sbtp61
a(V001_MODE field
p62
g1
(g18
g3
Ntp63
Rp64
(dp65
g22
I2
sg8
g62
sg23
VVP_MMU_SV32_F002_S001
p66
sg25
(dp67
sg12
I1
sg15
(lp68
(V000
p69
g1
(g29
g3
Ntp70
Rp71
(dp72
g8
V000
p73
sg23
VVP_MMU_SV32_F002_S001_I000
p74
sg35
VAllows to select different schemes of address translation. Writes to satp are ignored when unsupported mode is selected.
p75
sg37
VISA Volume II: Privilege Architecture Version 20211203, Chapter 5.1.11
p76
sg39
VShow that supported address translation scheme i.e sv32 is selected by writing satp.mode=sv32 and reading back the satp
p77
sg41
g42
sg43
I3
sg44
I0
sg45
I0
sg46
I8
sg47
g42
sg48
g42
sg49
(lp78
sg15
(lp79
sg52
(lp80
sg13
(dp81
g55
I0
ssbtp82
asg57
(lp83
sg52
(lp84
sg13
(dp85
sbtp86
a(V002_MODE=Bare
p87
g1
(g18
g3
Ntp88
Rp89
(dp90
g22
I1
sg8
g87
sg23
VVP_MMU_SV32_F002_S002
p91
sg25
(dp92
sg12
I2
sg15
(lp93
(V000
p94
g1
(g29
g3
Ntp95
Rp96
(dp97
g8
V000
p98
sg23
VVP_MMU_SV32_F002_S002_I000
p99
sg35
VSelecting MODE=Bare the remaining feild should be zero. Other encoding for remaining feild in satp is reserved
p100
sg37
VISA Volume II: Privilege Architecture Version 20211203, Chapter 5.1.11
p101
sg39
VShow wirting {zero, non-zero} value to satp when mode=bare the behaviour follows the design implemention
p102
sg41
g42
sg43
I3
sg44
I0
sg45
I0
sg46
I8
sg47
g42
sg48
g42
sg49
(lp103
sg15
(lp104
sg52
(lp105
sg13
(dp106
g55
I0
ssbtp107
asg57
(lp108
sg52
(lp109
sg13
(dp110
sbtp111
a(V003_ASIDLEN
p112
g1
(g18
g3
Ntp113
Rp114
(dp115
g22
I1
sg8
g112
sg23
VVP_MMU_SV32_F002_S003
p116
sg25
(dp117
sg12
I3
sg15
(lp118
(V000
p119
g1
(g29
g3
Ntp120
Rp121
(dp122
g8
V000
p123
sg23
VVP_MMU_SV32_F002_S003_I000
p124
sg35
VASIDLEN is the number of ASID bits implemented. MAXASID bits for sv32 is 9
p125
sg37
VISA Volume II: Privilege Architecture Version 20211203, Chapter 5.1.11
p126
sg39
VDetermine by writing one to every bit position in the ASID field, then reading back the value in satp to see which bit positions in the ASID field hold a one. Show that ASIDLEN is equal to the expected ASIDLEN
p127
sg41
g42
sg43
I3
sg44
I0
sg45
I0
sg46
I8
sg47
g42
sg48
g42
sg49
(lp128
sg15
(lp129
sg52
(lp130
sg13
(dp131
g55
I0
ssbtp132
asg57
(lp133
sg52
(lp134
sg13
(dp135
sbtp136
asVrfu_list_0
p137
(lp138
sg57
(lp139
sVvptool_gitrev
p140
V$Id: af214b54d38e440023a14011aefff4dabfd5f5ad $
p141
sVio_fmt_gitrev
p142
V$Id: 052d0c6f3d12d7984d208b14555a56b2f0c2485d $
p143
sVconfig_gitrev
p144
V$Id: 0422e19126dae20ffc4d5a84e4ce3de0b6eb4eb5 $
p145
sVymlcfg_gitrev
p146
V$Id: 286c689bd48b7a58f9a37754267895cffef1270c $
p147
sbtp148
.