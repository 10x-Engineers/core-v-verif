

# Header
name: cv32e40pv2_pulp_fpu_no_lat_covg
description: regression for CV32E40Pv2, pulp_fpu tests with no latency, step-and-compare against RM, cov enabled

# List of builds
builds:
  clean_fw:
    cmd: make clean-bsp clean_test_programs
    dir: cv32e40p/sim/uvmt
  corev-dv:
    cmd: make clean_riscv-dv comp_corev-dv
    dir: cv32e40p/sim/uvmt
    cov: 0
  uvmt_cv32e40p_pulp:
    cmd: make comp
    dir: cv32e40p/sim/uvmt
    cfg: pulp


# ====================================================================================
# List of tests
tests:

  # ====================================================================================
  # V2 PULP tests
  # ====================================================================================
  corev_rand_pulp_instr_test:
    build: uvmt_cv32e40p_pulp
    description: corev_rand_pulp_instr_test
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=corev_rand_pulp_instr_test
    iss: 1
    cov: 1
    num: 100

  corev_rand_pulp_simd_test:
    build: uvmt_cv32e40p_pulp
    description: corev_rand_pulp_simd_test
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=corev_rand_pulp_simd_test
    iss: 1
    cov: 1
    num: 100

  corev_rand_pulp_mac_test:
    build: uvmt_cv32e40p_pulp
    description: corev_rand_pulp_mac_test
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=corev_rand_pulp_mac_test
    iss: 1
    cov: 1
    num: 100

  corev_rand_hwloop_instr_test:
    build: uvmt_cv32e40p_pulp
    description: corev_rand_hwloop_instr_test
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=corev_rand_hwloop_instr_test
    iss: 1
    cov: 1
    num: 100

  corev_rand_debug_ebreak_xpulp:
    build: uvmt_cv32e40p_pulp
    description: corev_rand_debug_ebreak_xpulp
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=corev_rand_debug_ebreak_xpulp
    iss: 1
    cov: 1
    num: 100

  corev_rand_debug_ebreak_single_step_xpulp:
    build: uvmt_cv32e40p_pulp
    description: corev_rand_debug_ebreak_single_step_xpulp
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=corev_rand_debug_ebreak_single_step_xpulp
    test_cfg: debug_single_step_en
    iss: 1
    cov: 1
    num: 100

  # ====================================================================================
  # V1 rand tests re-used with v2 features
  # ====================================================================================

  corev_rand_instr_long_stall:
    build: uvmt_cv32e40p_pulp
    description: corev_rand_instr_long_stall
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=corev_rand_instr_long_stall
    iss: 1
    cov: 1
    num: 100

  corev_rand_interrupt:
    build: uvmt_cv32e40p_pulp
    description: corev_rand_interrupt
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=corev_rand_interrupt
    iss: 1
    cov: 1
    num: 100

  corev_rand_interrupt_debug:
    build: uvmt_cv32e40p_pulp
    description: corev_rand_interrupt_debug
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=corev_rand_interrupt_debug
    iss: 1
    cov: 1
    num: 100

  corev_rand_interrupt_exception:
    build: uvmt_cv32e40p_pulp
    description: corev_rand_interrupt_exception
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=corev_rand_interrupt_exception
    iss: 1
    cov: 1
    num: 100

  corev_rand_interrupt_nested:
    build: uvmt_cv32e40p_pulp
    description: corev_rand_interrupt_nested
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=corev_rand_interrupt_nested
    iss: 1
    cov: 1
    num: 100

  corev_rand_interrupt_wfi_mem_stress:
    build: uvmt_cv32e40p_pulp
    description: corev_rand_interrupt_wfi_mem_stress
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=corev_rand_interrupt_wfi_mem_stress
    iss: 1
    cov: 1
    num: 100

  corev_rand_jump_stress_test:
    build: uvmt_cv32e40p_pulp
    description: corev_rand_jump_stress_test
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=corev_rand_jump_stress_test
    iss: 1
    cov: 1
    num: 100


# ====================================================================================
# V1 legacy pulp tests
# ====================================================================================

pulp_bit_manipulation:
    build: uvmt_cv32e40p_pulp
    description: pulp_bit_manipulation legacy v1, kept as it stresses corner cases
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=pulp_bit_manipulation
    iss: 1
    cov: 1
    num: 1

pulp_general_alu:
    build: uvmt_cv32e40p_pulp
    description: pulp_general_alu legacy v1, kept as it stresses corner cases
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=pulp_general_alu
    iss: 1
    cov: 1
    num: 1

pulp_immediate_branching:
    build: uvmt_cv32e40p_pulp
    description: pulp_immediate_branching legacy v1, kept as it stresses corner cases
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=pulp_immediate_branching
    iss: 1
    cov: 1
    num: 1

pulp_multiply_accumulate:
    build: uvmt_cv32e40p_pulp
    description: pulp_multiply_accumulate legacy v1, kept as it stresses corner cases
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=pulp_multiply_accumulate
    iss: 1
    cov: 1
    num: 1

pulp_post_increment_load_store:
    build: uvmt_cv32e40p_pulp
    description: pulp_post_increment_load_store legacy v1, kept as it stresses corner cases
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=pulp_post_increment_load_store
    iss: 1
    cov: 1
    num: 1

pulp_vectorial_add_sub:
    build: uvmt_cv32e40p_pulp
    description: pulp_vectorial_add_sub legacy v1, kept as it stresses corner cases
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=pulp_vectorial_add_sub
    iss: 1
    cov: 1
    num: 1

pulp_vectorial_avg:
    build: uvmt_cv32e40p_pulp
    description: pulp_vectorial_avg legacy v1, kept as it stresses corner cases
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=pulp_vectorial_avg
    iss: 1
    cov: 1
    num: 1

pulp_vectorial_bit_manip:
    build: uvmt_cv32e40p_pulp
    description: pulp_vectorial_bit_manip legacy v1, kept as it stresses corner cases
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=pulp_vectorial_bit_manip
    iss: 1
    cov: 1
    num: 1

pulp_vectorial_bitwise:
    build: uvmt_cv32e40p_pulp
    description: pulp_vectorial_bitwise legacy v1, kept as it stresses corner cases
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=pulp_vectorial_bitwise
    iss: 1
    cov: 1
    num: 1

pulp_vectorial_comparison_1:
    build: uvmt_cv32e40p_pulp
    description: pulp_vectorial_comparison_1 legacy v1, kept as it stresses corner cases
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=pulp_vectorial_comparison_1
    iss: 1
    cov: 1
    num: 1

pulp_vectorial_comparison_2:
    build: uvmt_cv32e40p_pulp
    description: pulp_vectorial_comparison_2 legacy v1, kept as it stresses corner cases
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=pulp_vectorial_comparison_2
    iss: 1
    cov: 1
    num: 1

pulp_vectorial_comparison_3:
    build: uvmt_cv32e40p_pulp
    description: pulp_vectorial_comparison_3 legacy v1, kept as it stresses corner cases
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=pulp_vectorial_comparison_3
    iss: 1
    cov: 1
    num: 1

pulp_vectorial_complex:
    build: uvmt_cv32e40p_pulp
    description: pulp_vectorial_complex legacy v1, kept as it stresses corner cases
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=pulp_vectorial_complex
    iss: 1
    cov: 1
    num: 1

pulp_vectorial_dot_product_1:
    build: uvmt_cv32e40p_pulp
    description: pulp_vectorial_dot_product_1 legacy v1, kept as it stresses corner cases
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=pulp_vectorial_dot_product_1
    iss: 1
    cov: 1
    num: 1

pulp_vectorial_dot_product_2:
    build: uvmt_cv32e40p_pulp
    description: pulp_vectorial_dot_product_2 legacy v1, kept as it stresses corner cases
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=pulp_vectorial_dot_product_2
    iss: 1
    cov: 1
    num: 1

pulp_vectorial_max:
    build: uvmt_cv32e40p_pulp
    description: pulp_vectorial_max legacy v1, kept as it stresses corner cases
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=pulp_vectorial_max
    iss: 1
    cov: 1
    num: 1

pulp_vectorial_min:
    build: uvmt_cv32e40p_pulp
    description: pulp_vectorial_min legacy v1, kept as it stresses corner cases
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=pulp_vectorial_min
    iss: 1
    cov: 1
    num: 1

pulp_vectorial_shift:
    build: uvmt_cv32e40p_pulp
    description: pulp_vectorial_shift legacy v1, kept as it stresses corner cases
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=pulp_vectorial_shift
    iss: 1
    cov: 1
    num: 1

pulp_vectorial_shuffle_pack:
    build: uvmt_cv32e40p_pulp
    description: pulp_vectorial_shuffle_pack legacy v1, kept as it stresses corner cases
    dir: cv32e40p/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=pulp_vectorial_shuffle_pack
    iss: 1
    cov: 1
    num: 1
