#! /bin/bash

# Copyright 2023, OpenHW Group
# SPDX-License-Identifier:Apache-2.0 WITH SHL-2.1

# Dead-simple script to run a single test multiple times and report pass/fail results.
# Uses a different seed for each run.
# Generates the same "make test" command generated by the "ci_check" script.
#
# Usage:   run_many [test-program] [simulator] [nruns]
#          For example, "run_many hello-world vcs 2" will run the hello-world
#          test-program with VCS twice.
#
# TODO:    command-line argument processing is primitive.

if [ $# -gt 0 ]
then
  TESTPROGRAM=$1
else
  TESTPROGRAM=hello-world
fi

if [ $# -gt 1 ]
then
  SIM=$2
else
  SIM=vcs
fi

if [ $# -gt 2 ]
then
  RUNS=$3
else
  RUNS=2
fi
let RUNSM1=$RUNS-1

cd ../cv32e40p/sim/uvmt
echo "make clean_all SIMULATOR=$SIM"
make clean_all SIMULATOR=$SIM

counter=0
until [ $counter -gt $RUNSM1 ]
do
  THISSEED=`date +%N`
  echo "make test COREV=YES SEED=$THISSEED TEST=$TESTPROGRAM SIMULATOR=$SIM GEN_START_INDEX=$counter RUN_INDEX=$counter USE_ISS=NO"
  make test COREV=YES SEED=$THISSEED TEST=$TESTPROGRAM SIMULATOR=$SIM GEN_START_INDEX=$counter RUN_INDEX=$counter USE_ISS=NO
  ((counter++))
done

echo
echo
echo "Summary:"
echo "  Test-Program: $TESTPROGRAM"
echo "  Simulator:    $SIM"
echo -n "  Number of tests run:    "
grep "SIMULATION" `find ${SIM}_results/default/$TESTPROGRAM -name ${SIM}-*` | wc -l
echo -n "  Number of tests FAILED: "
grep "SIMULATION FAILED" `find ${SIM}_results/default/$TESTPROGRAM -name ${SIM}-*` | wc -l
echo
